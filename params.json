{
  "name": "VAOS",
  "tagline": "Virtual Airline Operations System",
  "body": "### FAQ\r\n\r\nSo what am I really getting when I download VAOS?\r\n\r\nFor everyone who is not a web developer, you are getting what many would call an incomplete system. The only thing that is actually missing is the front end. This is where the web developers come in. For you guys, you are getting a Laravel 5 (with some features disabled) application ready to attach your custom front end system.\r\n\r\nAre there interfaces on the way?\r\n\r\nYes. I am partnering with a few web developers to code the front ends. They will be releasing what everyone else would see as a complete system once they are ready.\r\n\r\nWhat type of features should I request for VAOS?\r\n\r\nThis is where it gets interesting. Remember, VAOS's goal is to be a framework to build systems onto. Features that directly affect the core like event management, financials, etc would fall under a core feature. Things like forums, chat rooms, etc would fall onto the individual system builder to implement.\r\n\r\nIs there a way to disable features I don't want? (eg. Departure lock to current airport)\r\n\r\nDepends on if it is a core feature or external feature. As a core feature, you can disable it via a config file or via the API (probably will get rid of the latter). If it is external, meaning developed by the system builder, it is up to them to implement disabling and enabling features they added to the system.\r\n\r\nHow do I download these \"complete systems?\"\r\n\r\nFor the security and safety of everyone, I have decided that the only legitimate means of distributing the complete systems is via the official website. While I know this will be annoying to many developers, I am making the process as painless as possible for both the developer and the consumer.\r\n\r\nI am a developer but want to make my system payware. How do I do that?\r\n\r\nAs I said in the previous comment, the only legitimate means of downloading addons or panels is through the official website. If you are interested in making a payware system, email taylor@cardinalhorizon.com and I can start the process with you.\r\n\r\nI want to build a payware plugin. How can I protect my code?\r\n\r\nA new option to developers is the hosted plugin (payware plugins only, unless the plugin is significant). Thanks again to the api-centric architecture, VAOS can call plugins and data hosted on another server rather easily. You can either host this on our servers or your own servers. Every VAOS install will carry a registration key that is registered with the master server upon install. All you have to do is host the plugin on the main server and only the VAOS install that is registered to use the plugin will have access to it. Data storage will be available for a small monthly fee if needed.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}